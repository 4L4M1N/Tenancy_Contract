// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tenancy_Contract.DataAccessLayer;

namespace TenancyContract.Migrations
{
    [DbContext(typeof(TenancyContractDbContext))]
    partial class TenancyContractDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TenancyContract.Entities.AbuseReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportText");

                    b.Property<DateTime>("ReportTime");

                    b.Property<string>("SenderId");

                    b.HasKey("Id");

                    b.ToTable("AbuseReports");
                });

            modelBuilder.Entity("TenancyContract.Entities.Contract", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AcceptHO");

                    b.Property<bool>("AcceptTenant");

                    b.Property<int>("Advance");

                    b.Property<DateTime>("AgreementDate");

                    b.Property<int>("ElectricityBill");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("GasBill");

                    b.Property<string>("HouseId");

                    b.Property<string>("HouseOwnerId");

                    b.Property<string>("HouseOwnerNID");

                    b.Property<int>("IncreaseRate");

                    b.Property<DateTime>("IncreaseTime");

                    b.Property<int>("MaintainCost");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("TenantId");

                    b.Property<string>("TenantNID");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("HouseOwnerId");

                    b.HasIndex("TenantId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("TenancyContract.Entities.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DistrictName");

                    b.Property<int>("DivisionId");

                    b.HasKey("DistrictId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("TenancyContract.Entities.Division", b =>
                {
                    b.Property<int>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DivisionName");

                    b.HasKey("DivisionId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("TenancyContract.Entities.House", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressDistrict");

                    b.Property<string>("AddressDivision");

                    b.Property<string>("AddressPO");

                    b.Property<string>("AddressRoad");

                    b.Property<string>("AddressThana");

                    b.Property<string>("AddressVillage");

                    b.Property<string>("CityCorporation");

                    b.Property<string>("DagNo");

                    b.Property<string>("HouseNo");

                    b.Property<string>("NID");

                    b.Property<string>("ServiceCentres");

                    b.HasKey("Id");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("TenancyContract.Entities.HouseOwner", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressDistrict");

                    b.Property<string>("AddressDivision");

                    b.Property<string>("AddressPO");

                    b.Property<string>("AddressRoad");

                    b.Property<string>("AddressThana");

                    b.Property<string>("AddressVillage");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("Email");

                    b.Property<string>("Gender");

                    b.Property<string>("Image");

                    b.Property<string>("Mobile");

                    b.Property<string>("NID");

                    b.Property<string>("Name");

                    b.Property<string>("PasswordHash");

                    b.HasKey("Id");

                    b.ToTable("HouseOwners");
                });

            modelBuilder.Entity("TenancyContract.Entities.LogInInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("UserStatus");

                    b.Property<string>("UserType");

                    b.HasKey("Id");

                    b.ToTable("LogInInfos");
                });

            modelBuilder.Entity("TenancyContract.Entities.Message", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MessageText");

                    b.Property<DateTime>("MessageTime");

                    b.Property<string>("ReceiverId");

                    b.Property<string>("SenderId");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("TenancyContract.Entities.Moderator", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressDistrict");

                    b.Property<string>("AddressDivision");

                    b.Property<string>("AddressPO");

                    b.Property<string>("AddressRoad");

                    b.Property<string>("AddressThana");

                    b.Property<string>("AddressVillage");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("Email");

                    b.Property<string>("Gender");

                    b.Property<string>("Image");

                    b.Property<string>("Mobile");

                    b.Property<string>("NID");

                    b.Property<string>("Name");

                    b.Property<string>("PasswordHash");

                    b.HasKey("Id");

                    b.ToTable("Moderators");
                });

            modelBuilder.Entity("TenancyContract.Entities.Review", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ReceiverId");

                    b.Property<string>("ReviewText");

                    b.Property<DateTime>("ReviewTime");

                    b.Property<string>("SenderId");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("TenancyContract.Entities.Tenant", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressDistrict");

                    b.Property<string>("AddressDivision");

                    b.Property<string>("AddressPO");

                    b.Property<string>("AddressRoad");

                    b.Property<string>("AddressThana");

                    b.Property<string>("AddressVillage");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("Email");

                    b.Property<string>("Gender");

                    b.Property<string>("Image");

                    b.Property<string>("Mobile");

                    b.Property<string>("NID");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("TenancyContract.Entities.Thana", b =>
                {
                    b.Property<int>("ThanaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistrictId");

                    b.Property<string>("ThanaName");

                    b.HasKey("ThanaId");

                    b.ToTable("Thanas");
                });

            modelBuilder.Entity("Web.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Web.Entities.NotificationApplicationUser", b =>
                {
                    b.Property<int>("NotificationId");

                    b.Property<string>("HouseOwnerNID");

                    b.Property<bool>("IsRead");

                    b.Property<string>("TenantNID");

                    b.HasKey("NotificationId");

                    b.ToTable("NotificationApplicationUsers");
                });

            modelBuilder.Entity("TenancyContract.Entities.Contract", b =>
                {
                    b.HasOne("TenancyContract.Entities.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId");

                    b.HasOne("TenancyContract.Entities.HouseOwner", "houseOwner")
                        .WithMany()
                        .HasForeignKey("HouseOwnerId");

                    b.HasOne("TenancyContract.Entities.Tenant", "tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");
                });

            modelBuilder.Entity("Web.Entities.NotificationApplicationUser", b =>
                {
                    b.HasOne("Web.Entities.Notification", "Notification")
                        .WithMany()
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
